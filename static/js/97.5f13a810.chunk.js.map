{"version":3,"file":"static/js/97.5f13a810.chunk.js","mappings":"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","sources":["pages/LodingPage.tsx","components/HttpError.tsx","zustandStores/usePaginationStore.tsx","zustandStores/useTagsListStore.tsx","pages/tags/TableRowElem.tsx","pages/tags/TableBodyElem.tsx","pages/tags/TableSort.tsx","pages/tags/TableHeadElem.tsx","pages/tags/TablePaginationElem.tsx","pages/tags/TableContainerElem.tsx","pages/tags/TagsContent.tsx","pages/tags/indexTags/IndexTags.tsx","services/fetchTags.tsx","data/dataURL.tsx","pages/tags/indexTags/utilsIndexTags.tsx"],"sourcesContent":["import CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nconst LoadingPage = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      sx={{ height: \"100vh\" }}\r\n    >\r\n      <CircularProgress sx={{ color: \"primary.dark\" }} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\ntype Props = {\r\n  errorMsg: Error;\r\n};\r\n\r\nconst HttpError = (props: Props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      style={{ height: \"100vh\" }}\r\n    >\r\n      <Box sx={{ textAlign: \"center\", color: \"error.main\" }}>\r\n        {props.errorMsg.message} <br /> Spr√≥buj ponownie\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HttpError;\r\n","import { create } from \"zustand\";\r\n\r\ntype ModelStore = {\r\n  page: number;\r\n  rowsPerPage: number;\r\n  setRowsPerPage: (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => void;\r\n  setPage: (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => void;\r\n};\r\n\r\nconst usePaginationStore = create<ModelStore>(set => ({\r\n  page: 0,\r\n  rowsPerPage: 5,\r\n  setRowsPerPage: event => {\r\n    set({ rowsPerPage: parseInt(event.target.value) });\r\n  },\r\n  setPage: (event, newPage: number) => {\r\n    const page = event ? newPage : 0;\r\n    set({ page: page });\r\n  },\r\n}));\r\n\r\nexport default usePaginationStore;\r\n","import { create } from \"zustand\";\r\nimport { ModelTagToPrint } from \"../sharedModels/modelTagToPrint\";\r\n\r\ntype ModelStore = {\r\n  tags: ModelTagToPrint[] | null;\r\n  setTags: (tagsList: ModelTagToPrint[] | null) => void;\r\n  sortTags: () => void;\r\n  checkTags: (idx: number) => void;\r\n};\r\n\r\nconst useTagsListStore = create<ModelStore>(set => ({\r\n  tags: null,\r\n\r\n  setTags: tagsList => {\r\n    set({ tags: tagsList });\r\n  },\r\n\r\n  sortTags: () => {\r\n    set(state => ({\r\n      tags: state.tags ? state.tags.slice().reverse() : null,\r\n    }));\r\n  },\r\n  \r\n  checkTags: idx => {\r\n    set(state => ({\r\n      tags: state.tags\r\n        ? state.tags.map((tag: ModelTagToPrint) => {\r\n            if (tag !== null && idx === tag.id) {\r\n              return { ...tag, isChecked: !tag.isChecked };\r\n            }\r\n            return tag;\r\n          })\r\n        : null,\r\n    }));\r\n  },\r\n}));\r\n\r\nexport default useTagsListStore;\r\n\r\n// import { create, SetState } from \"zustand\";\r\n// import { ModelTagToPrint } from \"../sharedModels/modelTagToPrint\";\r\n\r\n// type ModelStore = {\r\n//   tags: ModelTagToPrint[] | null;\r\n//   setTags: (tagsList: ModelTagToPrint[] | null) => void;\r\n//   sortTags: () => void;\r\n//   checkTags: (idx: number) => void;\r\n// };\r\n\r\n// const useTagsListStore = create<ModelStore>((set: SetState<ModelStore>) => ({\r\n//   tags: null,\r\n\r\n//   setTags: tagsList => {\r\n//     set(state => ({ ...state, tags: tagsList }));\r\n//   },\r\n\r\n//   sortTags: () => {\r\n//     set(state => ({\r\n//       ...state,\r\n//       tags: state.tags ? state.tags.slice().reverse() : null,\r\n//     }));\r\n//   },\r\n\r\n//   checkTags: idx => {\r\n//     set(state => ({\r\n//       ...state,\r\n//       tags: state.tags\r\n//         ? state.tags.map((tag: ModelTagToPrint | null) => {\r\n//             if (tag !== null && idx === tag.id) {\r\n//               return { ...tag, isChecked: !tag.isChecked };\r\n//             }\r\n//             return tag;\r\n//           })\r\n//         : null,\r\n//     }));\r\n//   },\r\n// }));\r\n\r\n// export default useTagsListStore;\r\n\r\n// import { create, SetState } from \"zustand\";\r\n// import { ModelTagToPrint } from \"../sharedModels/modelTagToPrint\";\r\n\r\n// type ModelStore = {\r\n//   tags: ModelTagToPrint[] | null;\r\n//   setTags: (tagsList: ModelTagToPrint[] | null) => void;\r\n//   sortTags: () => void;\r\n//   checkTags: (idx: number) => void;\r\n// };\r\n\r\n// const useTagsListStore = create<ModelStore>((set: SetState<ModelStore>) => ({\r\n//   tags: null,\r\n\r\n//   setTags: tagsList => {\r\n//     set(state => ({ ...state, tags: tagsList }));\r\n//   },\r\n\r\n//   sortTags: () => {\r\n//     set(state => ({\r\n//       ...state,\r\n//       tags: state.tags ? state.tags.slice().reverse() : null,\r\n//     }));\r\n//   },\r\n\r\n//   checkTags: idx => {\r\n//     set(state => ({\r\n//       ...state,\r\n//       tags: state.tags\r\n//         ? state.tags.map((tag: ModelTagToPrint | null) => {\r\n//             if (tag !== null && idx === tag.id) {\r\n//               return { ...tag, isChecked: !tag.isChecked };\r\n//             }\r\n//             return tag;\r\n//           })\r\n//         : null,\r\n//     }));\r\n//   },\r\n// }));\r\n\r\n// export default useTagsListStore;\r\n\r\n// import { create, SetState } from \"zustand\";\r\n// import { ModelTagToPrint } from \"../sharedModels/modelTagToPrint\";\r\n\r\n// type ModelStore = {\r\n//   tags: ModelTagToPrint[] | null;\r\n//   setTags: (tagsList: ModelTagToPrint[] | null) => void;\r\n//   sortTags: () => void;\r\n//   checkTags: (idx: number) => void;\r\n// };\r\n\r\n// const useTagsListStore = create<ModelStore>((set: SetState<ModelStore>) => ({\r\n//   tags: null,\r\n\r\n//   setTags: tagsList => {\r\n//     set(state => ({ ...state, tags: tagsList }));\r\n//   },\r\n\r\n//   sortTags: () => {\r\n//     set(state => ({\r\n//       ...state,\r\n//       tags: state.tags ? state.tags.slice().reverse() : null,\r\n//     }));\r\n//   },\r\n\r\n//   checkTags: idx => {\r\n//     set(state => ({\r\n//       ...state,\r\n//       tags: state.tags\r\n//         ? state.tags.map((tag: ModelTagToPrint | null) => {\r\n//             if (tag !== null && idx === tag.id) {\r\n//               return { ...tag, isChecked: !tag.isChecked };\r\n//             }\r\n//             return tag;\r\n//           })\r\n//         : null,\r\n//     }));\r\n//   },\r\n// }));\r\n\r\n// export default useTagsListStore;\r\n","import TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport useTagsListStore from \"../../zustandStores/useTagsListStore\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { ModelTagToPrint } from \"../../sharedModels/modelTagToPrint\";\r\n\r\ntype Props = {\r\n  tagData: ModelTagToPrint;\r\n};\r\n\r\nconst TableRowElem = (props: Props) => {\r\n  const checkTags = useTagsListStore(state => state.checkTags);\r\n  const theme = useTheme();\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        bgcolor: props.tagData.isChecked\r\n          ? \"primary.dark\"\r\n          : props.tagData.id % 2 === 1\r\n            ? \"primary.main\"\r\n            : \"transparent\",\r\n        cursor: \"pointer\",\r\n        fontSize: theme.typography.fs_primary,\r\n      }}\r\n      onClick={() => checkTags(props.tagData.id)}\r\n    >\r\n      <TableCell>\r\n        <Checkbox\r\n          checked={props.tagData.isChecked}\r\n          size=\"small\"\r\n          color=\"default\"\r\n          sx={{\r\n            padding: \"0\",\r\n          }}\r\n        />\r\n      </TableCell>\r\n      {[\r\n        props.tagData.id,\r\n        props.tagData.tags.join(\", \"),\r\n        props.tagData.counts,\r\n      ].map(props => {\r\n        return (\r\n          <TableCell key = {Math.random()} sx={{ fontSize: theme.typography.fs_primary }}>\r\n            {props}\r\n          </TableCell>\r\n        );\r\n      })}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableRowElem;\r\n","import TableBody from \"@mui/material/TableBody\";\r\nimport usePaginationStore from \"../../zustandStores/usePaginationStore\";\r\nimport useTagsListStore from \"../../zustandStores/useTagsListStore\";\r\nimport TableRowElem from \"./TableRowElem\";\r\nimport { ModelTagToPrint } from \"../../sharedModels/modelTagToPrint\";\r\n\r\n\r\nconst TableBodyElem = () => {\r\n  const page = usePaginationStore(state => state.page);\r\n  const rowsPerPage = usePaginationStore(state => state.rowsPerPage);\r\n  const tags = useTagsListStore(state => state.tags);\r\n\r\n  const displayedTags = tags?.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  return (\r\n    <TableBody>\r\n      {displayedTags?.map((tagData: ModelTagToPrint) => {\r\n        return <TableRowElem key={Math.random()} tagData={tagData} />;\r\n      })}\r\n    </TableBody>\r\n  );\r\n};\r\n\r\nexport default TableBodyElem;\r\n","import ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport  Typography  from \"@mui/material/Typography\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport useTagsListStore from \"../../zustandStores/useTagsListStore\";\r\nimport { useState } from \"react\";\r\n\r\nconst TableSort = () => {\r\n  const sortTags = useTagsListStore(state => state.sortTags);\r\n  const [rotate, setRotate] = useState(false);\r\n  const handleSortClick = () => {\r\n    sortTags();\r\n    setRotate(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <TableCell sx={{ cursor: \"pointer\" }}>\r\n      <Typography\r\n        component=\"span\"\r\n        variant = \"fs_primary\"\r\n        sx={{ display: \"flex\", alignItems: \"center\", fontWeight: \"600\" }}\r\n        onClick={handleSortClick}\r\n      >\r\n        Nr\r\n        <ArrowDownwardIcon\r\n          sx={{\r\n            transform: rotate ? `rotate(0deg)` : `rotate(180deg)`,\r\n            transition: \"0.3s\",\r\n            fontSize: \"1rem\",\r\n            color: \"primary.dark\"\r\n          }}\r\n        />\r\n      </Typography>\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nexport default TableSort;\r\n","import Typography from \"@mui/material/Typography\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSort from \"./TableSort\";\r\n\r\nconst TableHeadElem = () => {\r\n  return (\r\n    <TableHead>\r\n      <TableRow sx={{ borderTop: \"1px solid\", borderColor: \"primary.main\"}}>\r\n        <TableCell></TableCell>\r\n        <TableSort />\r\n        {[\"Tagi\", \"Posty\"].map(header => {\r\n          return (\r\n            <TableCell key={header}>\r\n              <Typography variant=\"fs_primary\" sx={{ fontWeight: \"600\" }}>\r\n                {header}\r\n              </Typography>\r\n            </TableCell>\r\n          );\r\n        })}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n};\r\n\r\nexport default TableHeadElem;\r\n","import TablePagination from \"@mui/material/TablePagination\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport usePaginationStore from \"../../zustandStores/usePaginationStore\";\r\nimport useTagsListStore from \"../../zustandStores/useTagsListStore\";\r\n\r\ntype ModelRowsParams = {\r\n  from: number;\r\n  to: number;\r\n  count: number;\r\n};\r\n\r\nconst TablePaginationElem = () => {\r\n  const page = usePaginationStore(state => state.page);\r\n  const rowsPerPage = usePaginationStore(state => state.rowsPerPage);\r\n  const setPage = usePaginationStore(state => state.setPage);\r\n  const setRowsPerPage = usePaginationStore(state => state.setRowsPerPage);\r\n  const tags = useTagsListStore(state => state.tags);\r\n\r\n  const defaultLabelDisplayedRows = ({ from, to, count }: ModelRowsParams) => {\r\n    return (\r\n      <Typography component=\"span\" variant=\"fs_small\">\r\n        {from}‚Äì{to} z {count !== -1 ? count : to}\r\n      </Typography>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      component=\"div\"\r\n      count={tags?.length ?? 0}\r\n      page={page}\r\n      onPageChange={setPage}\r\n      rowsPerPage={rowsPerPage}\r\n      onRowsPerPageChange={setRowsPerPage}\r\n      labelRowsPerPage={\r\n        <Typography component=\"span\" variant=\"fs_small\">\r\n          Liczba wpis√≥w na stronie\r\n        </Typography>\r\n      }\r\n      labelDisplayedRows={defaultLabelDisplayedRows}\r\n      rowsPerPageOptions={[5, 10, 15]}\r\n      sx={{\r\n        \"& .css-194a1fa-MuiSelect-select-MuiInputBase-input\": {\r\n          fontSize: \"0.7rem\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TablePaginationElem;\r\n","import Table from \"@mui/material/Table\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableBodyElem from \"./TableBodyElem\";\r\nimport TableHeadElem from \"./TableHeadElem\";\r\nimport TablePaginationElem from \"./TablePaginationElem\";\r\n\r\nconst TableContainerElem = () => {\r\n  return (\r\n    <TableContainer sx={{ mb: 1 }}>\r\n      <TablePaginationElem />\r\n      <Table aria-label=\"simple table\">\r\n        <TableHeadElem />\r\n        <TableBodyElem />\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TableContainerElem;\r\n","import Container from \"@mui/material/Container\";\r\nimport TableContainerElem from \"./TableContainerElem\";\r\n\r\nconst TagsContent = () => {\r\n  return (\r\n    <main>\r\n      <Container\r\n        sx={{\r\n          display: \"grid\",\r\n          placeItems: \"center\",\r\n          minHeight: \"100vh\",\r\n          color: \"error.main\",\r\n        }}\r\n      >\r\n        <TableContainerElem />\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TagsContent;\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport HttpError from \"../../../components/HttpError\";\r\nimport { URL_tags } from \"../../../data/dataURL\";\r\nimport { fetchTags } from \"../../../services/fetchTags\";\r\nimport LoadingPage from \"../../LodingPage\";\r\nimport TagsContent from \"../TagsContent\";\r\nimport useTagsListStore from \"../../../zustandStores/useTagsListStore\";\r\nimport { getTagsToPrint } from \"./utilsIndexTags\";\r\n\r\ntype ModelTags = {\r\n  items: {\r\n    tags: string[];\r\n    view_count: number;\r\n  }[];\r\n};\r\n\r\nconst IndexTags = () => {\r\n  const {\r\n    isLoading,\r\n    error,\r\n    data: tags,\r\n  } = useQuery<ModelTags>({\r\n    queryFn: () => fetchTags(URL_tags),\r\n    queryKey: [\"tags\"],\r\n    staleTime: Infinity,\r\n  });\r\n\r\n  const setTags = useTagsListStore(state => state.setTags);\r\n\r\n  const tagsToPrint = getTagsToPrint(tags);\r\n  setTags(tagsToPrint);\r\n\r\n  if (isLoading) {\r\n    return <LoadingPage />;\r\n  }\r\n  if (error) {\r\n    return <HttpError errorMsg={error} />;\r\n  }\r\n\r\n  return <TagsContent />;\r\n};\r\n\r\nexport default IndexTags;\r\n","export const fetchTags = async (url: string): Promise<any> => {\r\n  try {\r\n    const resp = await fetch(url);\r\n    if (!resp.ok) {\r\n      throw new Error(`B≈ÇƒÖd ${resp.status}.`);\r\n    }\r\n    return resp.json();\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","export const URL_tags =\r\n  \"https://api.stackexchange.com/2.3/questions?order=desc&sort=activity&site=stackoverflow\";\r\n","export const getTagsToPrint = (tags:any) =>{\r\n\r\nreturn  tags?.items.map(({ tags, view_count }:any, idx:any) => {\r\n   const formattedTags = tags.length === 0 ? [\"Brak danych\"] : tags;\r\n   const formattedCount = view_count ? view_count : \"Brak danych\";\r\n   return {\r\n     id: idx + 1,\r\n     tags: formattedTags,\r\n     counts: formattedCount,\r\n     isChecked: false,\r\n   };\r\n });\r\n}\r\n\r\n"],"names":["LoadingPage","_jsx","Grid","container","justifyContent","alignItems","sx","height","children","CircularProgress","color","props","style","_jsxs","Box","textAlign","errorMsg","message","create","set","page","rowsPerPage","setRowsPerPage","event","parseInt","target","value","setPage","newPage","tags","setTags","tagsList","sortTags","state","slice","reverse","checkTags","idx","map","tag","id","isChecked","useTagsListStore","theme","useTheme","TableRow","bgcolor","tagData","cursor","fontSize","typography","fs_primary","onClick","TableCell","Checkbox","checked","size","padding","join","counts","Math","random","TableBodyElem","usePaginationStore","displayedTags","TableBody","TableRowElem","TableSort","rotate","setRotate","useState","Typography","component","variant","display","fontWeight","handleSortClick","prev","ArrowDownwardIcon","transform","transition","TableHeadElem","TableHead","borderTop","borderColor","header","TablePaginationElem","_tags$length","TablePagination","count","length","onPageChange","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","_ref","from","to","rowsPerPageOptions","TableContainerElem","TableContainer","mb","Table","TagsContent","Container","placeItems","minHeight","IndexTags","isLoading","error","data","useQuery","queryFn","async","resp","fetch","url","ok","Error","concat","status","json","fetchTags","queryKey","staleTime","Infinity","tagsToPrint","items","view_count","getTagsToPrint","HttpError"],"sourceRoot":""}